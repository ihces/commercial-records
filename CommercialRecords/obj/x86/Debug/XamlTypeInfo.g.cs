//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace CommercialRecords
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace CommercialRecords.CommercialRecords_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[70];
            _typeNameTable[0] = "CommercialRecords.Converters.SizeAdjustmentConverter";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "CommercialRecords.Converters.InvertBooleanConverter";
            _typeNameTable[3] = "CommercialRecords.Converters.Double2MoneyConverter";
            _typeNameTable[4] = "CommercialRecords.Converters.String2VisibilityConverter";
            _typeNameTable[5] = "CommercialRecords.Converters.Boolean2VisibilityConverter";
            _typeNameTable[6] = "CommercialRecords.Converters.NullRef2VisibilityConverter";
            _typeNameTable[7] = "CommercialRecords.Converters.NullRef2BoolConverter";
            _typeNameTable[8] = "CommercialRecords.Converters.Compare2AssignVisibilityConverter";
            _typeNameTable[9] = "CommercialRecords.Converters.InvertVisibilityConverter";
            _typeNameTable[10] = "CommercialRecords.Converters.Value2RemarkConverter";
            _typeNameTable[11] = "CommercialRecords.Converters.Boolean2IntConverter";
            _typeNameTable[12] = "CommercialRecords.Controls.CrsInput";
            _typeNameTable[13] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[14] = "CommercialRecords.Controls.CrsInput.INPUTTYPES";
            _typeNameTable[15] = "System.Enum";
            _typeNameTable[16] = "System.ValueType";
            _typeNameTable[17] = "System.Windows.Input.ICommand";
            _typeNameTable[18] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[19] = "Int32";
            _typeNameTable[20] = "Boolean";
            _typeNameTable[21] = "Windows.UI.Xaml.Visibility";
            _typeNameTable[22] = "CommercialRecords.Constants.IconConsts.SegoeIcons";
            _typeNameTable[23] = "Double";
            _typeNameTable[24] = "CommercialRecords.Controls.CrsInput.IconVisibilities";
            _typeNameTable[25] = "String";
            _typeNameTable[26] = "Windows.UI.Xaml.Media.Brush";
            _typeNameTable[27] = "CommercialRecords.Panels.CrsFormView";
            _typeNameTable[28] = "CommercialRecords.Panels.CRSItemsPanel";
            _typeNameTable[29] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[30] = "System.Collections.Generic.List`1<Windows.UI.Xaml.UIElement>";
            _typeNameTable[31] = "Windows.UI.Xaml.UIElement";
            _typeNameTable[32] = "CommercialRecords.Panels.CRSItemsPanel.ORIENTATION";
            _typeNameTable[33] = "CommercialRecords.Controls.CrsButton";
            _typeNameTable[34] = "Windows.UI.Xaml.Controls.Button";
            _typeNameTable[35] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[36] = "CommercialRecords.Controls.CrsUserAuthentication";
            _typeNameTable[37] = "Windows.Foundation.Size";
            _typeNameTable[38] = "CommercialRecords.Controls.StarRating";
            _typeNameTable[39] = "CommercialRecords.Views.ViewBase";
            _typeNameTable[40] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[41] = "CommercialRecords.Panels.CRSRadioButtonPanel";
            _typeNameTable[42] = "CommercialRecords.Controls.CrsAppBarButton";
            _typeNameTable[43] = "Windows.UI.Xaml.Controls.AppBarButton";
            _typeNameTable[44] = "CommercialRecords.Views.Accounts.ActorInfo";
            _typeNameTable[45] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[46] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[47] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[48] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[49] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[50] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[51] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[52] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[53] = "CommercialRecords.Views.Accounts.CurrentAccountList";
            _typeNameTable[54] = "CommercialRecords.Views.Accounts.CurrentAccountView";
            _typeNameTable[55] = "CommercialRecords.Views.Accounts.EnterpriseAccounts";
            _typeNameTable[56] = "CommercialRecords.Views.BrandInfo";
            _typeNameTable[57] = "CommercialRecords.Views.Goods.CategoryInfo";
            _typeNameTable[58] = "CommercialRecords.Views.GoodInfo";
            _typeNameTable[59] = "CommercialRecords.Views.Goods.GoodsView";
            _typeNameTable[60] = "CommercialRecords.Views.ImagePicker";
            _typeNameTable[61] = "CommercialRecords.Views.IncomingNExpenses";
            _typeNameTable[62] = "CommercialRecords.Views.MainPage";
            _typeNameTable[63] = "CommercialRecords.Views.Settings.Settings";
            _typeNameTable[64] = "CommercialRecords.Views.Settings.UserInfo";
            _typeNameTable[65] = "CommercialRecords.Views.Settings.Users";
            _typeNameTable[66] = "CommercialRecords.Views.TransactionReports.TransactionReportsView";
            _typeNameTable[67] = "CommercialRecords.Views.Transacts.Payments";
            _typeNameTable[68] = "CommercialRecords.Views.Transacts.Sales";
            _typeNameTable[69] = "CommercialRecords.Views.Transacts.TransactList";

            _typeTable = new global::System.Type[70];
            _typeTable[0] = typeof(global::CommercialRecords.Converters.SizeAdjustmentConverter);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::CommercialRecords.Converters.InvertBooleanConverter);
            _typeTable[3] = typeof(global::CommercialRecords.Converters.Double2MoneyConverter);
            _typeTable[4] = typeof(global::CommercialRecords.Converters.String2VisibilityConverter);
            _typeTable[5] = typeof(global::CommercialRecords.Converters.Boolean2VisibilityConverter);
            _typeTable[6] = typeof(global::CommercialRecords.Converters.NullRef2VisibilityConverter);
            _typeTable[7] = typeof(global::CommercialRecords.Converters.NullRef2BoolConverter);
            _typeTable[8] = typeof(global::CommercialRecords.Converters.Compare2AssignVisibilityConverter);
            _typeTable[9] = typeof(global::CommercialRecords.Converters.InvertVisibilityConverter);
            _typeTable[10] = typeof(global::CommercialRecords.Converters.Value2RemarkConverter);
            _typeTable[11] = typeof(global::CommercialRecords.Converters.Boolean2IntConverter);
            _typeTable[12] = typeof(global::CommercialRecords.Controls.CrsInput);
            _typeTable[13] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[14] = typeof(global::CommercialRecords.Controls.CrsInput.INPUTTYPES);
            _typeTable[15] = typeof(global::System.Enum);
            _typeTable[16] = typeof(global::System.ValueType);
            _typeTable[17] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[18] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[19] = typeof(global::System.Int32);
            _typeTable[20] = typeof(global::System.Boolean);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Visibility);
            _typeTable[22] = typeof(global::CommercialRecords.Constants.IconConsts.SegoeIcons);
            _typeTable[23] = typeof(global::System.Double);
            _typeTable[24] = typeof(global::CommercialRecords.Controls.CrsInput.IconVisibilities);
            _typeTable[25] = typeof(global::System.String);
            _typeTable[26] = typeof(global::Windows.UI.Xaml.Media.Brush);
            _typeTable[27] = typeof(global::CommercialRecords.Panels.CrsFormView);
            _typeTable[28] = typeof(global::CommercialRecords.Panels.CRSItemsPanel);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[30] = typeof(global::System.Collections.Generic.List<global::Windows.UI.Xaml.UIElement>);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.UIElement);
            _typeTable[32] = typeof(global::CommercialRecords.Panels.CRSItemsPanel.ORIENTATION);
            _typeTable[33] = typeof(global::CommercialRecords.Controls.CrsButton);
            _typeTable[34] = typeof(global::Windows.UI.Xaml.Controls.Button);
            _typeTable[35] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[36] = typeof(global::CommercialRecords.Controls.CrsUserAuthentication);
            _typeTable[37] = typeof(global::Windows.Foundation.Size);
            _typeTable[38] = typeof(global::CommercialRecords.Controls.StarRating);
            _typeTable[39] = typeof(global::CommercialRecords.Views.ViewBase);
            _typeTable[40] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[41] = typeof(global::CommercialRecords.Panels.CRSRadioButtonPanel);
            _typeTable[42] = typeof(global::CommercialRecords.Controls.CrsAppBarButton);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Controls.AppBarButton);
            _typeTable[44] = typeof(global::CommercialRecords.Views.Accounts.ActorInfo);
            _typeTable[45] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[46] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[47] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[48] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[49] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[50] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[51] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[52] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[53] = typeof(global::CommercialRecords.Views.Accounts.CurrentAccountList);
            _typeTable[54] = typeof(global::CommercialRecords.Views.Accounts.CurrentAccountView);
            _typeTable[55] = typeof(global::CommercialRecords.Views.Accounts.EnterpriseAccounts);
            _typeTable[56] = typeof(global::CommercialRecords.Views.BrandInfo);
            _typeTable[57] = typeof(global::CommercialRecords.Views.Goods.CategoryInfo);
            _typeTable[58] = typeof(global::CommercialRecords.Views.GoodInfo);
            _typeTable[59] = typeof(global::CommercialRecords.Views.Goods.GoodsView);
            _typeTable[60] = typeof(global::CommercialRecords.Views.ImagePicker);
            _typeTable[61] = typeof(global::CommercialRecords.Views.IncomingNExpenses);
            _typeTable[62] = typeof(global::CommercialRecords.Views.MainPage);
            _typeTable[63] = typeof(global::CommercialRecords.Views.Settings.Settings);
            _typeTable[64] = typeof(global::CommercialRecords.Views.Settings.UserInfo);
            _typeTable[65] = typeof(global::CommercialRecords.Views.Settings.Users);
            _typeTable[66] = typeof(global::CommercialRecords.Views.TransactionReports.TransactionReportsView);
            _typeTable[67] = typeof(global::CommercialRecords.Views.Transacts.Payments);
            _typeTable[68] = typeof(global::CommercialRecords.Views.Transacts.Sales);
            _typeTable[69] = typeof(global::CommercialRecords.Views.Transacts.TransactList);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_SizeAdjustmentConverter() { return new global::CommercialRecords.Converters.SizeAdjustmentConverter(); }
        private object Activate_2_InvertBooleanConverter() { return new global::CommercialRecords.Converters.InvertBooleanConverter(); }
        private object Activate_3_Double2MoneyConverter() { return new global::CommercialRecords.Converters.Double2MoneyConverter(); }
        private object Activate_4_String2VisibilityConverter() { return new global::CommercialRecords.Converters.String2VisibilityConverter(); }
        private object Activate_5_Boolean2VisibilityConverter() { return new global::CommercialRecords.Converters.Boolean2VisibilityConverter(); }
        private object Activate_6_NullRef2VisibilityConverter() { return new global::CommercialRecords.Converters.NullRef2VisibilityConverter(); }
        private object Activate_7_NullRef2BoolConverter() { return new global::CommercialRecords.Converters.NullRef2BoolConverter(); }
        private object Activate_8_Compare2AssignVisibilityConverter() { return new global::CommercialRecords.Converters.Compare2AssignVisibilityConverter(); }
        private object Activate_9_InvertVisibilityConverter() { return new global::CommercialRecords.Converters.InvertVisibilityConverter(); }
        private object Activate_10_Value2RemarkConverter() { return new global::CommercialRecords.Converters.Value2RemarkConverter(); }
        private object Activate_11_Boolean2IntConverter() { return new global::CommercialRecords.Converters.Boolean2IntConverter(); }
        private object Activate_12_CrsInput() { return new global::CommercialRecords.Controls.CrsInput(); }
        private object Activate_27_CrsFormView() { return new global::CommercialRecords.Panels.CrsFormView(); }
        private object Activate_28_CRSItemsPanel() { return new global::CommercialRecords.Panels.CRSItemsPanel(); }
        private object Activate_30_List() { return new global::System.Collections.Generic.List<global::Windows.UI.Xaml.UIElement>(); }
        private object Activate_33_CrsButton() { return new global::CommercialRecords.Controls.CrsButton(); }
        private object Activate_36_CrsUserAuthentication() { return new global::CommercialRecords.Controls.CrsUserAuthentication(); }
        private object Activate_38_StarRating() { return new global::CommercialRecords.Controls.StarRating(); }
        private object Activate_41_CRSRadioButtonPanel() { return new global::CommercialRecords.Panels.CRSRadioButtonPanel(); }
        private object Activate_42_CrsAppBarButton() { return new global::CommercialRecords.Controls.CrsAppBarButton(); }
        private object Activate_44_ActorInfo() { return new global::CommercialRecords.Views.Accounts.ActorInfo(); }
        private object Activate_46_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_49_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_50_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_51_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_53_CurrentAccountList() { return new global::CommercialRecords.Views.Accounts.CurrentAccountList(); }
        private object Activate_54_CurrentAccountView() { return new global::CommercialRecords.Views.Accounts.CurrentAccountView(); }
        private object Activate_55_EnterpriseAccounts() { return new global::CommercialRecords.Views.Accounts.EnterpriseAccounts(); }
        private object Activate_56_BrandInfo() { return new global::CommercialRecords.Views.BrandInfo(); }
        private object Activate_57_CategoryInfo() { return new global::CommercialRecords.Views.Goods.CategoryInfo(); }
        private object Activate_58_GoodInfo() { return new global::CommercialRecords.Views.GoodInfo(); }
        private object Activate_59_GoodsView() { return new global::CommercialRecords.Views.Goods.GoodsView(); }
        private object Activate_60_ImagePicker() { return new global::CommercialRecords.Views.ImagePicker(); }
        private object Activate_61_IncomingNExpenses() { return new global::CommercialRecords.Views.IncomingNExpenses(); }
        private object Activate_62_MainPage() { return new global::CommercialRecords.Views.MainPage(); }
        private object Activate_63_Settings() { return new global::CommercialRecords.Views.Settings.Settings(); }
        private object Activate_64_UserInfo() { return new global::CommercialRecords.Views.Settings.UserInfo(); }
        private object Activate_65_Users() { return new global::CommercialRecords.Views.Settings.Users(); }
        private object Activate_66_TransactionReportsView() { return new global::CommercialRecords.Views.TransactionReports.TransactionReportsView(); }
        private object Activate_67_Payments() { return new global::CommercialRecords.Views.Transacts.Payments(); }
        private object Activate_68_Sales() { return new global::CommercialRecords.Views.Transacts.Sales(); }
        private object Activate_69_TransactList() { return new global::CommercialRecords.Views.Transacts.TransactList(); }
        private void VectorAdd_30_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.UIElement>)instance;
            var newItem = (global::Windows.UI.Xaml.UIElement)item;
            collection.Add(newItem);
        }
        private void VectorAdd_46_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_50_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  CommercialRecords.Converters.SizeAdjustmentConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_SizeAdjustmentConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  CommercialRecords.Converters.InvertBooleanConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_InvertBooleanConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 3:   //  CommercialRecords.Converters.Double2MoneyConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_Double2MoneyConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 4:   //  CommercialRecords.Converters.String2VisibilityConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_String2VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 5:   //  CommercialRecords.Converters.Boolean2VisibilityConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_5_Boolean2VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 6:   //  CommercialRecords.Converters.NullRef2VisibilityConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_6_NullRef2VisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 7:   //  CommercialRecords.Converters.NullRef2BoolConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_7_NullRef2BoolConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 8:   //  CommercialRecords.Converters.Compare2AssignVisibilityConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_8_Compare2AssignVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  CommercialRecords.Converters.InvertVisibilityConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_9_InvertVisibilityConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 10:   //  CommercialRecords.Converters.Value2RemarkConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_10_Value2RemarkConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 11:   //  CommercialRecords.Converters.Boolean2IntConverter
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_Boolean2IntConverter;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 12:   //  CommercialRecords.Controls.CrsInput
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_12_CrsInput;
                userType.AddMemberName("InputType");
                userType.AddMemberName("TextChanged");
                userType.AddMemberName("InputTemplate");
                userType.AddMemberName("InputsSource");
                userType.AddMemberName("InputMaxLength");
                userType.AddMemberName("MaxSize");
                userType.AddMemberName("ToolTipPopupIsOpen");
                userType.AddMemberName("ReadOnly");
                userType.AddMemberName("DataPermission");
                userType.AddMemberName("Required");
                userType.AddMemberName("RequiredSignVisibility");
                userType.AddMemberName("IsValid");
                userType.AddMemberName("Validate");
                userType.AddMemberName("LowerBound");
                userType.AddMemberName("UpperBound");
                userType.AddMemberName("Multiline");
                userType.AddMemberName("Icon");
                userType.AddMemberName("IconWidth");
                userType.AddMemberName("IconFontSize");
                userType.AddMemberName("IconVisibility");
                userType.AddMemberName("Input");
                userType.AddMemberName("Remark");
                userType.AddMemberName("ToolTipHeader");
                userType.AddMemberName("ToolTipContent");
                userType.AddMemberName("ThemeBrush");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 13:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  CommercialRecords.Controls.CrsInput.INPUTTYPES
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("ALL", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.ALL);
                userType.AddEnumValue("NAME", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.NAME);
                userType.AddEnumValue("NUMBER", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.NUMBER);
                userType.AddEnumValue("DOUBLE", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.DOUBLE);
                userType.AddEnumValue("MONEY", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.MONEY);
                userType.AddEnumValue("PHONENUMBER", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.PHONENUMBER);
                userType.AddEnumValue("DATE", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.DATE);
                userType.AddEnumValue("DATETIME", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.DATETIME);
                userType.AddEnumValue("PASSWORD", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.PASSWORD);
                userType.AddEnumValue("MULTISELECT", global::CommercialRecords.Controls.CrsInput.INPUTTYPES.MULTISELECT);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  System.Enum
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 16:   //  System.ValueType
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 17:   //  System.Windows.Input.ICommand
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 18:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 19:   //  Int32
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  Boolean
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 21:   //  Windows.UI.Xaml.Visibility
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  CommercialRecords.Constants.IconConsts.SegoeIcons
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("SAVE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.SAVE);
                userType.AddEnumValue("DELETE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.DELETE);
                userType.AddEnumValue("DISCARD", global::CommercialRecords.Constants.IconConsts.SegoeIcons.DISCARD);
                userType.AddEnumValue("REMOVE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.REMOVE);
                userType.AddEnumValue("ADD", global::CommercialRecords.Constants.IconConsts.SegoeIcons.ADD);
                userType.AddEnumValue("NO", global::CommercialRecords.Constants.IconConsts.SegoeIcons.NO);
                userType.AddEnumValue("YES", global::CommercialRecords.Constants.IconConsts.SegoeIcons.YES);
                userType.AddEnumValue("MORE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.MORE);
                userType.AddEnumValue("REDO", global::CommercialRecords.Constants.IconConsts.SegoeIcons.REDO);
                userType.AddEnumValue("HOME", global::CommercialRecords.Constants.IconConsts.SegoeIcons.HOME);
                userType.AddEnumValue("BOY", global::CommercialRecords.Constants.IconConsts.SegoeIcons.BOY);
                userType.AddEnumValue("FIRM", global::CommercialRecords.Constants.IconConsts.SegoeIcons.FIRM);
                userType.AddEnumValue("PIN", global::CommercialRecords.Constants.IconConsts.SegoeIcons.PIN);
                userType.AddEnumValue("PHONE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.PHONE);
                userType.AddEnumValue("CELLPHONE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.CELLPHONE);
                userType.AddEnumValue("FOLDER", global::CommercialRecords.Constants.IconConsts.SegoeIcons.FOLDER);
                userType.AddEnumValue("CURRENCY", global::CommercialRecords.Constants.IconConsts.SegoeIcons.CURRENCY);
                userType.AddEnumValue("NOTE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.NOTE);
                userType.AddEnumValue("TALK", global::CommercialRecords.Constants.IconConsts.SegoeIcons.TALK);
                userType.AddEnumValue("CONTACT", global::CommercialRecords.Constants.IconConsts.SegoeIcons.CONTACT);
                userType.AddEnumValue("CALENDAR", global::CommercialRecords.Constants.IconConsts.SegoeIcons.CALENDAR);
                userType.AddEnumValue("COMMENT", global::CommercialRecords.Constants.IconConsts.SegoeIcons.COMMENT);
                userType.AddEnumValue("OPENLOCAL", global::CommercialRecords.Constants.IconConsts.SegoeIcons.OPENLOCAL);
                userType.AddEnumValue("TODAY", global::CommercialRecords.Constants.IconConsts.SegoeIcons.TODAY);
                userType.AddEnumValue("MAP", global::CommercialRecords.Constants.IconConsts.SegoeIcons.MAP);
                userType.AddEnumValue("STOCK", global::CommercialRecords.Constants.IconConsts.SegoeIcons.STOCK);
                userType.AddEnumValue("LIST", global::CommercialRecords.Constants.IconConsts.SegoeIcons.LIST);
                userType.AddEnumValue("VAT", global::CommercialRecords.Constants.IconConsts.SegoeIcons.VAT);
                userType.AddEnumValue("PRICE", global::CommercialRecords.Constants.IconConsts.SegoeIcons.PRICE);
                userType.AddEnumValue("TAG", global::CommercialRecords.Constants.IconConsts.SegoeIcons.TAG);
                userType.AddEnumValue("TRIM", global::CommercialRecords.Constants.IconConsts.SegoeIcons.TRIM);
                userType.AddEnumValue("SHOP", global::CommercialRecords.Constants.IconConsts.SegoeIcons.SHOP);
                userType.AddEnumValue("SWITCHAPPS", global::CommercialRecords.Constants.IconConsts.SegoeIcons.SWITCHAPPS);
                userType.AddEnumValue("FACTORY", global::CommercialRecords.Constants.IconConsts.SegoeIcons.FACTORY);
                userType.AddEnumValue("PERMISSION", global::CommercialRecords.Constants.IconConsts.SegoeIcons.PERMISSION);
                userType.AddEnumValue("AUTH", global::CommercialRecords.Constants.IconConsts.SegoeIcons.AUTH);
                userType.AddEnumValue("WITHDRAWAL", global::CommercialRecords.Constants.IconConsts.SegoeIcons.WITHDRAWAL);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 23:   //  Double
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 24:   //  CommercialRecords.Controls.CrsInput.IconVisibilities
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("at_Right", global::CommercialRecords.Controls.CrsInput.IconVisibilities.at_Right);
                userType.AddEnumValue("at_Left", global::CommercialRecords.Controls.CrsInput.IconVisibilities.at_Left);
                userType.AddEnumValue("Collapsed", global::CommercialRecords.Controls.CrsInput.IconVisibilities.Collapsed);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  String
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 26:   //  Windows.UI.Xaml.Media.Brush
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 27:   //  CommercialRecords.Panels.CrsFormView
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel"));
                userType.Activator = Activate_27_CrsFormView;
                userType.AddMemberName("CaptureEnter");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 28:   //  CommercialRecords.Panels.CRSItemsPanel
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.ItemsControl"));
                userType.Activator = Activate_28_CRSItemsPanel;
                userType.AddMemberName("GapSize");
                userType.AddMemberName("FunctionalPermission");
                userType.AddMemberName("Children");
                userType.AddMemberName("Orientation");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  System.Collections.Generic.List`1<Windows.UI.Xaml.UIElement>
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_30_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.UIElement
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  CommercialRecords.Panels.CRSItemsPanel.ORIENTATION
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Vertical", global::CommercialRecords.Panels.CRSItemsPanel.ORIENTATION.Vertical);
                userType.AddEnumValue("Horizontal", global::CommercialRecords.Panels.CRSItemsPanel.ORIENTATION.Horizontal);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  CommercialRecords.Controls.CrsButton
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Button"));
                userType.Activator = Activate_33_CrsButton;
                userType.AddMemberName("FunctionalPermission");
                userType.AddMemberName("Validation");
                userType.AddMemberName("Disabled");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  Windows.UI.Xaml.Controls.Button
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 35:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 36:   //  CommercialRecords.Controls.CrsUserAuthentication
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_36_CrsUserAuthentication;
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("AuthSuccess");
                userType.AddMemberName("AuthSize");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  Windows.Foundation.Size
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  CommercialRecords.Controls.StarRating
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_38_StarRating;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 39:   //  CommercialRecords.Views.ViewBase
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 41:   //  CommercialRecords.Panels.CRSRadioButtonPanel
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel"));
                userType.Activator = Activate_41_CRSRadioButtonPanel;
                userType.AddMemberName("CheckedIndex");
                userType.AddMemberName("CheckedItem");
                userType.AddMemberName("CheckedCommand");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 42:   //  CommercialRecords.Controls.CrsAppBarButton
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.AppBarButton"));
                userType.Activator = Activate_42_CrsAppBarButton;
                userType.AddMemberName("FunctionalPermission");
                userType.AddMemberName("Validation");
                userType.AddMemberName("Disabled");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.Controls.AppBarButton
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  CommercialRecords.Views.Accounts.ActorInfo
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_44_ActorInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 46:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_46_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 47:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 48:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_49_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 50:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_50_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 51:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_51_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 52:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 53:   //  CommercialRecords.Views.Accounts.CurrentAccountList
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_53_CurrentAccountList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  CommercialRecords.Views.Accounts.CurrentAccountView
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_54_CurrentAccountView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 55:   //  CommercialRecords.Views.Accounts.EnterpriseAccounts
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_55_EnterpriseAccounts;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 56:   //  CommercialRecords.Views.BrandInfo
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_56_BrandInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 57:   //  CommercialRecords.Views.Goods.CategoryInfo
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_57_CategoryInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 58:   //  CommercialRecords.Views.GoodInfo
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_58_GoodInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 59:   //  CommercialRecords.Views.Goods.GoodsView
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_59_GoodsView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 60:   //  CommercialRecords.Views.ImagePicker
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_60_ImagePicker;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 61:   //  CommercialRecords.Views.IncomingNExpenses
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_61_IncomingNExpenses;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 62:   //  CommercialRecords.Views.MainPage
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_62_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 63:   //  CommercialRecords.Views.Settings.Settings
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_63_Settings;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 64:   //  CommercialRecords.Views.Settings.UserInfo
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_64_UserInfo;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 65:   //  CommercialRecords.Views.Settings.Users
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_65_Users;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  CommercialRecords.Views.TransactionReports.TransactionReportsView
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_66_TransactionReportsView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  CommercialRecords.Views.Transacts.Payments
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_67_Payments;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 68:   //  CommercialRecords.Views.Transacts.Sales
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_68_Sales;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 69:   //  CommercialRecords.Views.Transacts.TransactList
                userType = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("CommercialRecords.Views.ViewBase"));
                userType.Activator = Activate_69_TransactList;
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_CrsInput_InputType(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.InputType;
        }
        private void set_0_CrsInput_InputType(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.InputType = (global::CommercialRecords.Controls.CrsInput.INPUTTYPES)Value;
        }
        private object get_1_CrsInput_TextChanged(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.TextChanged;
        }
        private void set_1_CrsInput_TextChanged(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.TextChanged = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_2_CrsInput_InputTemplate(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.InputTemplate;
        }
        private void set_2_CrsInput_InputTemplate(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.InputTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_3_CrsInput_InputsSource(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.InputsSource;
        }
        private void set_3_CrsInput_InputsSource(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.InputsSource = (global::System.Object)Value;
        }
        private object get_4_CrsInput_InputMaxLength(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.InputMaxLength;
        }
        private void set_4_CrsInput_InputMaxLength(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.InputMaxLength = (global::System.Int32)Value;
        }
        private object get_5_CrsInput_MaxSize(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.MaxSize;
        }
        private void set_5_CrsInput_MaxSize(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.MaxSize = (global::System.Int32)Value;
        }
        private object get_6_CrsInput_ToolTipPopupIsOpen(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.ToolTipPopupIsOpen;
        }
        private void set_6_CrsInput_ToolTipPopupIsOpen(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.ToolTipPopupIsOpen = (global::System.Boolean)Value;
        }
        private object get_7_CrsInput_ReadOnly(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.ReadOnly;
        }
        private void set_7_CrsInput_ReadOnly(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.ReadOnly = (global::System.Boolean)Value;
        }
        private object get_8_CrsInput_DataPermission(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.DataPermission;
        }
        private void set_8_CrsInput_DataPermission(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.DataPermission = (global::System.Int32)Value;
        }
        private object get_9_CrsInput_Required(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Required;
        }
        private void set_9_CrsInput_Required(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Required = (global::System.Boolean)Value;
        }
        private object get_10_CrsInput_RequiredSignVisibility(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.RequiredSignVisibility;
        }
        private void set_10_CrsInput_RequiredSignVisibility(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.RequiredSignVisibility = (global::Windows.UI.Xaml.Visibility)Value;
        }
        private object get_11_CrsInput_IsValid(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.IsValid;
        }
        private void set_11_CrsInput_IsValid(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.IsValid = (global::System.Boolean)Value;
        }
        private object get_12_CrsInput_Validate(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Validate;
        }
        private void set_12_CrsInput_Validate(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Validate = (global::System.Boolean)Value;
        }
        private object get_13_CrsInput_LowerBound(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.LowerBound;
        }
        private void set_13_CrsInput_LowerBound(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.LowerBound = (global::System.Object)Value;
        }
        private object get_14_CrsInput_UpperBound(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.UpperBound;
        }
        private void set_14_CrsInput_UpperBound(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.UpperBound = (global::System.Object)Value;
        }
        private object get_15_CrsInput_Multiline(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Multiline;
        }
        private void set_15_CrsInput_Multiline(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Multiline = (global::System.Boolean)Value;
        }
        private object get_16_CrsInput_Icon(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Icon;
        }
        private void set_16_CrsInput_Icon(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Icon = (global::CommercialRecords.Constants.IconConsts.SegoeIcons)Value;
        }
        private object get_17_CrsInput_IconWidth(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.IconWidth;
        }
        private void set_17_CrsInput_IconWidth(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.IconWidth = (global::System.Double)Value;
        }
        private object get_18_CrsInput_IconFontSize(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.IconFontSize;
        }
        private void set_18_CrsInput_IconFontSize(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.IconFontSize = (global::System.Double)Value;
        }
        private object get_19_CrsInput_IconVisibility(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.IconVisibility;
        }
        private void set_19_CrsInput_IconVisibility(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.IconVisibility = (global::CommercialRecords.Controls.CrsInput.IconVisibilities)Value;
        }
        private object get_20_CrsInput_Input(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Input;
        }
        private void set_20_CrsInput_Input(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Input = (global::System.Object)Value;
        }
        private object get_21_CrsInput_Remark(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.Remark;
        }
        private void set_21_CrsInput_Remark(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.Remark = (global::System.String)Value;
        }
        private object get_22_CrsInput_ToolTipHeader(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.ToolTipHeader;
        }
        private void set_22_CrsInput_ToolTipHeader(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.ToolTipHeader = (global::System.String)Value;
        }
        private object get_23_CrsInput_ToolTipContent(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.ToolTipContent;
        }
        private void set_23_CrsInput_ToolTipContent(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.ToolTipContent = (global::System.String)Value;
        }
        private object get_24_CrsInput_ThemeBrush(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            return that.ThemeBrush;
        }
        private void set_24_CrsInput_ThemeBrush(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsInput)instance;
            that.ThemeBrush = (global::Windows.UI.Xaml.Media.Brush)Value;
        }
        private object get_25_CRSItemsPanel_GapSize(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            return that.GapSize;
        }
        private void set_25_CRSItemsPanel_GapSize(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            that.GapSize = (global::System.Int32)Value;
        }
        private object get_26_CRSItemsPanel_FunctionalPermission(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            return that.FunctionalPermission;
        }
        private void set_26_CRSItemsPanel_FunctionalPermission(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            that.FunctionalPermission = (global::System.Int32)Value;
        }
        private object get_27_CrsFormView_CaptureEnter(object instance)
        {
            var that = (global::CommercialRecords.Panels.CrsFormView)instance;
            return that.CaptureEnter;
        }
        private void set_27_CrsFormView_CaptureEnter(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CrsFormView)instance;
            that.CaptureEnter = (global::System.Boolean)Value;
        }
        private object get_28_CRSItemsPanel_Children(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            return that.Children;
        }
        private object get_29_CRSItemsPanel_Orientation(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            return that.Orientation;
        }
        private void set_29_CRSItemsPanel_Orientation(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSItemsPanel)instance;
            that.Orientation = (global::CommercialRecords.Panels.CRSItemsPanel.ORIENTATION)Value;
        }
        private object get_30_CrsButton_FunctionalPermission(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            return that.FunctionalPermission;
        }
        private void set_30_CrsButton_FunctionalPermission(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            that.FunctionalPermission = (global::System.Int32)Value;
        }
        private object get_31_CrsButton_Validation(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            return that.Validation;
        }
        private void set_31_CrsButton_Validation(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            that.Validation = (global::System.Boolean)Value;
        }
        private object get_32_CrsButton_Disabled(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            return that.Disabled;
        }
        private void set_32_CrsButton_Disabled(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsButton)instance;
            that.Disabled = (global::System.Boolean)Value;
        }
        private object get_33_CrsUserAuthentication_IsOpen(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            return that.IsOpen;
        }
        private void set_33_CrsUserAuthentication_IsOpen(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_34_CrsUserAuthentication_AuthSuccess(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            return that.AuthSuccess;
        }
        private void set_34_CrsUserAuthentication_AuthSuccess(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            that.AuthSuccess = (global::System.Boolean)Value;
        }
        private object get_35_CrsUserAuthentication_AuthSize(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            return that.AuthSize;
        }
        private void set_35_CrsUserAuthentication_AuthSize(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsUserAuthentication)instance;
            that.AuthSize = (global::Windows.Foundation.Size)Value;
        }
        private object get_36_CRSRadioButtonPanel_CheckedIndex(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            return that.CheckedIndex;
        }
        private void set_36_CRSRadioButtonPanel_CheckedIndex(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            that.CheckedIndex = (global::System.Int32)Value;
        }
        private object get_37_CRSRadioButtonPanel_CheckedItem(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            return that.CheckedItem;
        }
        private void set_37_CRSRadioButtonPanel_CheckedItem(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            that.CheckedItem = (global::System.Object)Value;
        }
        private object get_38_CRSRadioButtonPanel_CheckedCommand(object instance)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            return that.CheckedCommand;
        }
        private void set_38_CRSRadioButtonPanel_CheckedCommand(object instance, object Value)
        {
            var that = (global::CommercialRecords.Panels.CRSRadioButtonPanel)instance;
            that.CheckedCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_39_CrsAppBarButton_FunctionalPermission(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            return that.FunctionalPermission;
        }
        private void set_39_CrsAppBarButton_FunctionalPermission(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            that.FunctionalPermission = (global::System.Int32)Value;
        }
        private object get_40_CrsAppBarButton_Validation(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            return that.Validation;
        }
        private void set_40_CrsAppBarButton_Validation(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            that.Validation = (global::System.Boolean)Value;
        }
        private object get_41_CrsAppBarButton_Disabled(object instance)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            return that.Disabled;
        }
        private void set_41_CrsAppBarButton_Disabled(object instance, object Value)
        {
            var that = (global::CommercialRecords.Controls.CrsAppBarButton)instance;
            that.Disabled = (global::System.Boolean)Value;
        }
        private object get_42_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_42_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_43_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_44_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_44_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_45_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_45_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_46_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_47_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_47_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_48_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_48_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_49_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_49_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_50_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_50_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_51_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_51_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember xamlMember = null;
            global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "CommercialRecords.Controls.CrsInput.InputType":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputType", "CommercialRecords.Controls.CrsInput.INPUTTYPES");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_CrsInput_InputType;
                xamlMember.Setter = set_0_CrsInput_InputType;
                break;
            case "CommercialRecords.Controls.CrsInput.TextChanged":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "TextChanged", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_CrsInput_TextChanged;
                xamlMember.Setter = set_1_CrsInput_TextChanged;
                break;
            case "CommercialRecords.Controls.CrsInput.InputTemplate":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_CrsInput_InputTemplate;
                xamlMember.Setter = set_2_CrsInput_InputTemplate;
                break;
            case "CommercialRecords.Controls.CrsInput.InputsSource":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputsSource", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_CrsInput_InputsSource;
                xamlMember.Setter = set_3_CrsInput_InputsSource;
                break;
            case "CommercialRecords.Controls.CrsInput.InputMaxLength":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputMaxLength", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_CrsInput_InputMaxLength;
                xamlMember.Setter = set_4_CrsInput_InputMaxLength;
                break;
            case "CommercialRecords.Controls.CrsInput.MaxSize":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "MaxSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_CrsInput_MaxSize;
                xamlMember.Setter = set_5_CrsInput_MaxSize;
                break;
            case "CommercialRecords.Controls.CrsInput.ToolTipPopupIsOpen":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "ToolTipPopupIsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_CrsInput_ToolTipPopupIsOpen;
                xamlMember.Setter = set_6_CrsInput_ToolTipPopupIsOpen;
                break;
            case "CommercialRecords.Controls.CrsInput.ReadOnly":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "ReadOnly", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_CrsInput_ReadOnly;
                xamlMember.Setter = set_7_CrsInput_ReadOnly;
                break;
            case "CommercialRecords.Controls.CrsInput.DataPermission":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "DataPermission", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_CrsInput_DataPermission;
                xamlMember.Setter = set_8_CrsInput_DataPermission;
                break;
            case "CommercialRecords.Controls.CrsInput.Required":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Required", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_CrsInput_Required;
                xamlMember.Setter = set_9_CrsInput_Required;
                break;
            case "CommercialRecords.Controls.CrsInput.RequiredSignVisibility":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "RequiredSignVisibility", "Windows.UI.Xaml.Visibility");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_CrsInput_RequiredSignVisibility;
                xamlMember.Setter = set_10_CrsInput_RequiredSignVisibility;
                break;
            case "CommercialRecords.Controls.CrsInput.IsValid":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "IsValid", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_CrsInput_IsValid;
                xamlMember.Setter = set_11_CrsInput_IsValid;
                break;
            case "CommercialRecords.Controls.CrsInput.Validate":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Validate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_CrsInput_Validate;
                xamlMember.Setter = set_12_CrsInput_Validate;
                break;
            case "CommercialRecords.Controls.CrsInput.LowerBound":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "LowerBound", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_CrsInput_LowerBound;
                xamlMember.Setter = set_13_CrsInput_LowerBound;
                break;
            case "CommercialRecords.Controls.CrsInput.UpperBound":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "UpperBound", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_CrsInput_UpperBound;
                xamlMember.Setter = set_14_CrsInput_UpperBound;
                break;
            case "CommercialRecords.Controls.CrsInput.Multiline":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Multiline", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_CrsInput_Multiline;
                xamlMember.Setter = set_15_CrsInput_Multiline;
                break;
            case "CommercialRecords.Controls.CrsInput.Icon":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Icon", "CommercialRecords.Constants.IconConsts.SegoeIcons");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_CrsInput_Icon;
                xamlMember.Setter = set_16_CrsInput_Icon;
                break;
            case "CommercialRecords.Controls.CrsInput.IconWidth":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "IconWidth", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_CrsInput_IconWidth;
                xamlMember.Setter = set_17_CrsInput_IconWidth;
                break;
            case "CommercialRecords.Controls.CrsInput.IconFontSize":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "IconFontSize", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_CrsInput_IconFontSize;
                xamlMember.Setter = set_18_CrsInput_IconFontSize;
                break;
            case "CommercialRecords.Controls.CrsInput.IconVisibility":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "IconVisibility", "CommercialRecords.Controls.CrsInput.IconVisibilities");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_CrsInput_IconVisibility;
                xamlMember.Setter = set_19_CrsInput_IconVisibility;
                break;
            case "CommercialRecords.Controls.CrsInput.Input":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Input", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_CrsInput_Input;
                xamlMember.Setter = set_20_CrsInput_Input;
                break;
            case "CommercialRecords.Controls.CrsInput.Remark":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Remark", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_CrsInput_Remark;
                xamlMember.Setter = set_21_CrsInput_Remark;
                break;
            case "CommercialRecords.Controls.CrsInput.ToolTipHeader":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "ToolTipHeader", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_CrsInput_ToolTipHeader;
                xamlMember.Setter = set_22_CrsInput_ToolTipHeader;
                break;
            case "CommercialRecords.Controls.CrsInput.ToolTipContent":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "ToolTipContent", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_CrsInput_ToolTipContent;
                xamlMember.Setter = set_23_CrsInput_ToolTipContent;
                break;
            case "CommercialRecords.Controls.CrsInput.ThemeBrush":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsInput");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "ThemeBrush", "Windows.UI.Xaml.Media.Brush");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_CrsInput_ThemeBrush;
                xamlMember.Setter = set_24_CrsInput_ThemeBrush;
                break;
            case "CommercialRecords.Panels.CRSItemsPanel.GapSize":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "GapSize", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_CRSItemsPanel_GapSize;
                xamlMember.Setter = set_25_CRSItemsPanel_GapSize;
                break;
            case "CommercialRecords.Panels.CRSItemsPanel.FunctionalPermission":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "FunctionalPermission", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_CRSItemsPanel_FunctionalPermission;
                xamlMember.Setter = set_26_CRSItemsPanel_FunctionalPermission;
                break;
            case "CommercialRecords.Panels.CrsFormView.CaptureEnter":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CrsFormView");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "CaptureEnter", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_CrsFormView_CaptureEnter;
                xamlMember.Setter = set_27_CrsFormView_CaptureEnter;
                break;
            case "CommercialRecords.Panels.CRSItemsPanel.Children":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.List`1<Windows.UI.Xaml.UIElement>");
                xamlMember.Getter = get_28_CRSItemsPanel_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "CommercialRecords.Panels.CRSItemsPanel.Orientation":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSItemsPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Orientation", "CommercialRecords.Panels.CRSItemsPanel.ORIENTATION");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_CRSItemsPanel_Orientation;
                xamlMember.Setter = set_29_CRSItemsPanel_Orientation;
                break;
            case "CommercialRecords.Controls.CrsButton.FunctionalPermission":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "FunctionalPermission", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_CrsButton_FunctionalPermission;
                xamlMember.Setter = set_30_CrsButton_FunctionalPermission;
                break;
            case "CommercialRecords.Controls.CrsButton.Validation":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Validation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_CrsButton_Validation;
                xamlMember.Setter = set_31_CrsButton_Validation;
                break;
            case "CommercialRecords.Controls.CrsButton.Disabled":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Disabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_32_CrsButton_Disabled;
                xamlMember.Setter = set_32_CrsButton_Disabled;
                break;
            case "CommercialRecords.Controls.CrsUserAuthentication.IsOpen":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsUserAuthentication");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_CrsUserAuthentication_IsOpen;
                xamlMember.Setter = set_33_CrsUserAuthentication_IsOpen;
                break;
            case "CommercialRecords.Controls.CrsUserAuthentication.AuthSuccess":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsUserAuthentication");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "AuthSuccess", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_CrsUserAuthentication_AuthSuccess;
                xamlMember.Setter = set_34_CrsUserAuthentication_AuthSuccess;
                break;
            case "CommercialRecords.Controls.CrsUserAuthentication.AuthSize":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsUserAuthentication");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "AuthSize", "Windows.Foundation.Size");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_CrsUserAuthentication_AuthSize;
                xamlMember.Setter = set_35_CrsUserAuthentication_AuthSize;
                break;
            case "CommercialRecords.Panels.CRSRadioButtonPanel.CheckedIndex":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSRadioButtonPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "CheckedIndex", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_CRSRadioButtonPanel_CheckedIndex;
                xamlMember.Setter = set_36_CRSRadioButtonPanel_CheckedIndex;
                break;
            case "CommercialRecords.Panels.CRSRadioButtonPanel.CheckedItem":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSRadioButtonPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "CheckedItem", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_CRSRadioButtonPanel_CheckedItem;
                xamlMember.Setter = set_37_CRSRadioButtonPanel_CheckedItem;
                break;
            case "CommercialRecords.Panels.CRSRadioButtonPanel.CheckedCommand":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Panels.CRSRadioButtonPanel");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "CheckedCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_CRSRadioButtonPanel_CheckedCommand;
                xamlMember.Setter = set_38_CRSRadioButtonPanel_CheckedCommand;
                break;
            case "CommercialRecords.Controls.CrsAppBarButton.FunctionalPermission":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsAppBarButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "FunctionalPermission", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_39_CrsAppBarButton_FunctionalPermission;
                xamlMember.Setter = set_39_CrsAppBarButton_FunctionalPermission;
                break;
            case "CommercialRecords.Controls.CrsAppBarButton.Validation":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsAppBarButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Validation", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_40_CrsAppBarButton_Validation;
                xamlMember.Setter = set_40_CrsAppBarButton_Validation;
                break;
            case "CommercialRecords.Controls.CrsAppBarButton.Disabled":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("CommercialRecords.Controls.CrsAppBarButton");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Disabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_41_CrsAppBarButton_Disabled;
                xamlMember.Setter = set_41_CrsAppBarButton_Disabled;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_42_Interaction_Behaviors;
                xamlMember.Setter = set_42_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_44_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_45_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_46_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_47_InvokeCommandAction_Command;
                xamlMember.Setter = set_47_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_48_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_48_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_49_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_49_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_50_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_50_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_51_InvokeCommandAction_InputConverterLanguage;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlSystemBaseType
    {
        global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::CommercialRecords.CommercialRecords_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


